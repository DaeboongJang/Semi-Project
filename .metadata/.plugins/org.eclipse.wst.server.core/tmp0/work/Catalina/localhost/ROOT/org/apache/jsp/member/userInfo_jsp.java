/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2021-12-16 04:33:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1638513134000L));
    _jspx_dependants.put("jar:file:/D:/workspace_photofolio/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/photofolio/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>개인정보페이지</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        $(document).ready(function(){\r\n");
      out.write("            $(\"#header\").load(\"/resources/header/header.jsp\")      \r\n");
      out.write("         });\r\n");
      out.write("    </script>\r\n");
      out.write("    <style>\r\n");
      out.write("    /*제목부분*/\r\n");
      out.write(".titleInfo{\r\n");
      out.write("    position: relative;\r\n");
      out.write("    right:3.125rem; /*50px*/\r\n");
      out.write("    height: 6.25rem; /*100px*/\r\n");
      out.write("}\r\n");
      out.write(".titleInfo>h2{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    font-size: 50px; \r\n");
      out.write("    top:0.625rem; /*10px*/\r\n");
      out.write("    left:48.75rem; /*780px*/\r\n");
      out.write("}\r\n");
      out.write("/*유저전체정보창(연한색부분)*/\r\n");
      out.write("#user_id, #user_nickname, #image, #user_email, #phone_first, #phone_second, #phone_third, #user_address, #sample4_postcode,\r\n");
      out.write("#sample4_roadAddress, #sample4_detailAddress, #sample4_extraAddress{\r\n");
      out.write("	background-color:#ececf8;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write(".userInfo{\r\n");
      out.write("	position:absolute;\r\n");
      out.write(" 	border-radius:10px;\r\n");
      out.write("    width:75rem; /*1200px*/\r\n");
      out.write("    height:78.125rem; /*1250px*/\r\n");
      out.write("    background-color: #ececf8;\r\n");
      out.write("    left:20.625rem; /*330px*/\r\n");
      out.write("}\r\n");
      out.write(".EveryInput{\r\n");
      out.write("    margin:auto;\r\n");
      out.write("    width:62.5rem; /*1000px*/\r\n");
      out.write("    height:81.25rem; /*1300px*/\r\n");
      out.write("    padding-top:0.625rem /*10px*/\r\n");
      out.write("}\r\n");
      out.write(".label{\r\n");
      out.write("    font-weight: 800;\r\n");
      out.write("}\r\n");
      out.write(".EveryInput>div{\r\n");
      out.write("    margin:2.5rem; /*40px*/\r\n");
      out.write("    margin-top:2.5rem; /*40px*/\r\n");
      out.write("}\r\n");
      out.write("  #image_container{\r\n");
      out.write("            width: 22.188rem; /*355px*/\r\n");
      out.write("            height: 22.188rem; /*355px*/  \r\n");
      out.write("            background-image: url(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getProfilePhoto_path()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("            background-repeat: no-repeat;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            padding-left:0;\r\n");
      out.write("            padding-right:0;\r\n");
      out.write("            overflow:hidden;\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write(" #image_container>img{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    object-fit:cover;\r\n");
      out.write("        }\r\n");
      out.write("#nicknameCheck, #nicknameBack, #emailCheck, #emailBack, #phoneBack, #phone_verification{\r\n");
      out.write("	display:none;\r\n");
      out.write("}\r\n");
      out.write(" #nicknameBack, #emailBack, #phoneBack{\r\n");
      out.write(" 	margin-top:10px;\r\n");
      out.write(" }\r\n");
      out.write("#hiddenInput{\r\n");
      out.write("	margin-left:305px;\r\n");
      out.write("}\r\n");
      out.write("#hiddenInput2{\r\n");
      out.write("	margin-left:270px;\r\n");
      out.write("}\r\n");
      out.write("#hiddenInput, #hiddenInput2, #email_verification {\r\n");
      out.write("			display: none;\r\n");
      out.write("		}\r\n");
      out.write(".clsBtn{\r\n");
      out.write("	width:6.875rem; /*110px*/ \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnMD{\r\n");
      out.write("	width:8.125rem; /*130px*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*첫 시작화면시 버튼*/\r\n");
      out.write(".btnBox-first{\r\n");
      out.write("   /*position: absolute;*/\r\n");
      out.write("   text-align:center;\r\n");
      out.write("   width:56.25rem; /*900px*/\r\n");
      out.write("   padding-left:50px;\r\n");
      out.write("   \r\n");
      out.write("   visibility: visible;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write(".btnBox-first2{\r\n");
      out.write("	padding-left:210px;\r\n");
      out.write("}\r\n");
      out.write(".btnBox-first2>div{\r\n");
      out.write("	text-align:center;\r\n");
      out.write("}\r\n");
      out.write(".btnBox-first>div{\r\n");
      out.write("	text-align:center;\r\n");
      out.write("}\r\n");
      out.write(".btnBox-first>div>button{\r\n");
      out.write("    width:8.125rem; /*130px*/  \r\n");
      out.write("}\r\n");
      out.write("/*수정 눌렀을 시 버튼*/\r\n");
      out.write(".btnBox-last{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    width:56.25rem; /*900px*/\r\n");
      out.write("    top: 71.875rem; /*1150px*/\r\n");
      out.write("    left:23.125rem; /*370px*/\r\n");
      out.write("    visibility: hidden;\r\n");
      out.write("}\r\n");
      out.write(".btnBox-last>div>button{\r\n");
      out.write("    width:8.125rem; /*130px*/  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        <div id=\"header\"></div>\r\n");
      out.write("        <!-- 닉네임 출력 -->\r\n");
      out.write("        <div class=\"titleInfo\">\r\n");
      out.write("            <h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_nickname() }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<span>님의 정보</span></h2>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- 유저정보 출력창 -->\r\n");
      out.write("    <div class=\"userInfo\">\r\n");
      out.write("    	<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modifyProc.mem\" id=\"modifyForm\" method=\"post\"\r\n");
      out.write("    	enctype=\"multipart/form-data\">\r\n");
      out.write("            <div class=\"EveryInput\">\r\n");
      out.write("            <!-- 아이디 영역 -> 수정 불가 -->\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-3 label\">Login ID</div>\r\n");
      out.write("                    <div class=\"col-9\">\r\n");
      out.write("                        <input type=\"text\" id=\"user_id\" name=\"user_id\" class=\"form-control\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_id()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- 닉네임영역 ->수정 가능(중복검사) -->\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                	<input id=\"sub_nickname\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_nickname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"subNN\" hidden>\r\n");
      out.write("                    <div class=\"col-3 label\">NickName</div>\r\n");
      out.write("                    <div class=\"col-7\">\r\n");
      out.write("                        <input type=\"text\" id=\"user_nickname\" name=\"user_nickname\" maxlength=\"10\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_nickname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"form-control\" readonly>\r\n");
      out.write("                        <div class=\"invalid-feedback\">\r\n");
      out.write("						닉네임을 입력해주세요.\r\n");
      out.write("				    	</div>\r\n");
      out.write("				    	<span class=\"txtRegex\" id=\"txtRegex_nickname\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-2\" id=\"nicknameBtn-before\">\r\n");
      out.write("                    	<button type=\"button\" id=\"nicknameMD\" class=\"btn btn-primary btnMD\" disabled>수정</button>\r\n");
      out.write("                    	<button type=\"button\" id=\"nicknameCheck\" class=\"btn btn-primary clsBtn\" disabled>중복 검사</button>\r\n");
      out.write("                    	<button type=\"button\" id=\"nicknameBack\" class=\"btn btn-secondary\">취소</button>\r\n");
      out.write("                    </div>              \r\n");
      out.write("                </div>\r\n");
      out.write("                <!--프로필 영역-->\r\n");
      out.write("				<div class=\"row photoBox\">\r\n");
      out.write("					<input value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getProfilePhoto_path()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"subFile\" id=\"subFile\" hidden>\r\n");
      out.write("    				<div class=\"col-3 label\">Profile Image</div>\r\n");
      out.write("    				<div class=\"col-4\">\r\n");
      out.write("       					 <div class=\"input-group mb-3\">\r\n");
      out.write("       					 \r\n");
      out.write("       					 	<input type=\"file\" class=\"form-control\" name=\"file\" accept=\"image/*\" id=\"image\" onchange=\"setThumbnail(event);\" disabled>\r\n");
      out.write("       					\r\n");
      out.write("     	   		    	</div>\r\n");
      out.write("    				</div>\r\n");
      out.write("				    <div class=\"col-5\" id=\"image_container\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 이메일영역 -> 수정 가능(인증) -->\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                	<input id=\"sub_email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_email()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" hidden>\r\n");
      out.write("                    <div class=\"col-3 label\">E-mail</div>\r\n");
      out.write("                    <div class=\"col-7\">\r\n");
      out.write("                        <input type=\"text\" id=\"user_email\" name=\"user_email\" maxlength=\"35\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_email()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"form-control\" readonly>\r\n");
      out.write("                        <div class=\"invalid-feedback\">\r\n");
      out.write("						이메일을 입력해주세요.\r\n");
      out.write("					    </div>\r\n");
      out.write("					    <span class=\"txtRegex\" id=\"txtRegex_email\"></span>\r\n");
      out.write("                    </div> \r\n");
      out.write("                    <div class=\"col-2\">\r\n");
      out.write("                    	<button type=\"button\" id=\"emailMD\" class=\"btn btn-primary btnMD\" disabled>수정</button>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-primary clsBtn\" id=\"emailCheck\" disabled>중복 검사</button>\r\n");
      out.write("						<button type=\"button\" id=\"emailBack\" class=\"btn btn-secondary\">취소</button>\r\n");
      out.write("					</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!--숨은 인증창-->\r\n");
      out.write("				<div class=\"row\" id=\"hiddenInput2\">\r\n");
      out.write("					<div class=\"col-md-9 mb-3\">\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" id=\"verification_input2\" placeholder=\"인증번호 입력\" required>\r\n");
      out.write("						<div class=\"invalid-feedback\">\r\n");
      out.write("							이메일을 입력해주세요.\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				<div class=\"col-md-3 mb-3\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-primary\" id=\"verification_submit2\" disabled>인증번호 확인</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 핸드폰영역 -> 수정가능(인증) -->\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                	<input id=\"sub_phone_first\" hidden>\r\n");
      out.write("                	<input id=\"sub_phone_second\" hidden>\r\n");
      out.write("                	<input id=\"sub_phone_third\" hidden>\r\n");
      out.write("                    <div class=\"col-3 label\">Phone</div>\r\n");
      out.write("                    <div class=\"col-3\">\r\n");
      out.write("                        <select name=\"phone_first\" id=\"phone_first\" class=\"form-select\" aria-label=\"Default select example\" disabled>\r\n");
      out.write("                            <option selected>010</option>\r\n");
      out.write("                            <option value=\"010\">011</option>\r\n");
      out.write("                            <option value=\"010\">016</option>\r\n");
      out.write("                            <option value=\"010\">017</option>\r\n");
      out.write("                            <option value=\"010\">018</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        <span class=\"txtRegex\" id=\"txtRegex_phone\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-2\">\r\n");
      out.write("                        <input type=\"text\" id=\"phone_second\" name=\"phone_second\" class=\"form-control\" maxlength=\"4\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-2\">\r\n");
      out.write("                        <input type=\"text\" id=\"phone_third\" name=\"phone_third\" class=\"form-control\" maxlength=\"4\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-2\">\r\n");
      out.write("                    	 <button type=\"button\" id=\"phoneMD\" class=\"btn btn-primary btnMD\" disabled>수정</button>\r\n");
      out.write("					     <button type=\"button\" class=\"btn btn-primary\" id=\"phone_verification\" disabled>인증번호 발송</button>\r\n");
      out.write("				   		 <button type=\"button\" id=\"phoneBack\" class=\"btn btn-secondary\">취소</button>\r\n");
      out.write("				    </div>\r\n");
      out.write("				    <!--숨은 인증창-->\r\n");
      out.write("		        	<div class=\"row my-4\" id=\"hiddenInput\">\r\n");
      out.write("				          <div class=\"col-md-6 mb-3\">\r\n");
      out.write("					             <input type=\"text\" class=\"form-control\" id=\"verification_input\" maxlength=\"4\" placeholder=\"인증번호 입력\" required>\r\n");
      out.write("				          </div>\r\n");
      out.write("				          <div class=\"col-md-6 mb-3\">\r\n");
      out.write("				               	<button type=\"button\" class=\"btn btn-primary\" id=\"verification_submit\" disabled>인증번호 확인</button>\r\n");
      out.write("				         </div>\r\n");
      out.write("		         	</div>\r\n");
      out.write("                    <input type=\"text\" id=\"user_phone\" name=\"user_phone\" hidden>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <!-- 주소영역 -> 수정 가능  -->\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                	<input id=\"sub_user_address\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_address()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" hidden>\r\n");
      out.write("                    <div class=\"col-3 label\">Address</div>\r\n");
      out.write("                    <div class=\"col-9\">\r\n");
      out.write("                    	<!-- 주소 병합한 곳 -->\r\n");
      out.write("                        <input type=\"text\" id=\"user_address\" name=\"user_address\" class=\"form-control\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_address()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row addressBox\">\r\n");
      out.write("                    <div class=\"col-3\"></div>\r\n");
      out.write("                    <div class=\"col-4\">\r\n");
      out.write("                        <input type=\"text\" id=\"sample4_postcode\" class=\"form-control\" placeholder=\"우편번호\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-4\">\r\n");
      out.write("                        <input type=\"button\" id=\"postbtn\" class=\"btn btn-primary\"onclick=\"sample4_execDaumPostcode()\" value=\"우편번호 찾기\" disabled>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row addressBox\">\r\n");
      out.write("                    <div class=\"col-3\"></div>\r\n");
      out.write("                    <div class=\"col-9\">\r\n");
      out.write("                        <input type=\"text\" id=\"sample4_roadAddress\" class=\"form-control\" placeholder=\"도로명주소\" readonly>\r\n");
      out.write("                        <span id=\"guide\" style=\"color:#999;display:none\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row addressBox\">\r\n");
      out.write("                    <div class=\"col-3\"></div>\r\n");
      out.write("                    <div class=\"col-4\">\r\n");
      out.write("                        <input type=\"text\" id=\"sample4_detailAddress\" class=\"form-control\" placeholder=\"상세주소\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-5\">\r\n");
      out.write("                        <input type=\"text\" id=\"sample4_extraAddress\" class=\"form-control\" placeholder=\"참고항목\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                <div class=\"row btnBox-last\">\r\n");
      out.write("                    <div class=\"col-3\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-outline-success\" id=\"btnGo\">완료</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-3\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-outline-dark\" id=\"btnBack\">뒤로가기</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("   \r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("    //핸드폰 값 분할해서 찢어줌 \r\n");
      out.write("    let phone = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getUser_phone()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("    \r\n");
      out.write("    document.getElementById(\"phone_second\").value = phone.substring(3,7)\r\n");
      out.write("    document.getElementById(\"phone_third\").value = phone.substring(7);\r\n");
      out.write("    document.getElementById(\"sub_phone_first\").value = phone.substring(0,3);\r\n");
      out.write("    document.getElementById(\"sub_phone_second\").value = phone.substring(3,7)\r\n");
      out.write("    document.getElementById(\"sub_phone_third\").value = phone.substring(7);\r\n");
      out.write("    </script>\r\n");
      out.write("        <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	//우편 API\r\n");
      out.write("	\r\n");
      out.write("    //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.\r\n");
      out.write("    function sample4_execDaumPostcode() {\r\n");
      out.write("        new daum.Postcode({\r\n");
      out.write("            oncomplete: function(data) {\r\n");
      out.write("                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("                var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                    extraRoadAddr += data.bname;\r\n");
      out.write("                }\r\n");
      out.write("                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                }\r\n");
      out.write("                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                if(extraRoadAddr !== ''){\r\n");
      out.write("                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("                document.getElementById('sample4_postcode').value = data.zonecode;\r\n");
      out.write("                document.getElementById(\"sample4_roadAddress\").value = roadAddr;\r\n");
      out.write("                \r\n");
      out.write("                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("                if(roadAddr !== ''){\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = extraRoadAddr;\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = '';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("                if(data.autoRoadAddress) {\r\n");
      out.write("                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;\r\n");
      out.write("                    guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';\r\n");
      out.write("                    guideTextBox.style.display = 'block';\r\n");
      out.write("\r\n");
      out.write("                } else {\r\n");
      out.write("                    guideTextBox.innerHTML = '';\r\n");
      out.write("                    guideTextBox.style.display = 'none';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }).open();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        //개인정보수정버튼 클릭시 아이디 제외한 인풋창 풀림 + 수정,완료 버튼 보이게함\r\n");
      out.write("        $(\"#btnModify\").click(function(){\r\n");
      out.write("            $(\"#btnUpload\").attr(\"readonly\", false);        \r\n");
      out.write("            $(\"#phoneMD\").attr(\"disabled\", false);\r\n");
      out.write("            $(\"#sample4_detailAddress\").attr(\"readonly\", false);\r\n");
      out.write("            $(\"#postbtn\").attr(\"disabled\", false);\r\n");
      out.write("            $(\"#btnUpload\").attr(\"disabled\",false);\r\n");
      out.write("            $(\"#nicknameMD\").attr(\"disabled\", false);\r\n");
      out.write("            $(\"#emailMD\").attr(\"disabled\", false);\r\n");
      out.write("            $(\".btnBox-first\").css(\"visibility\", \"hidden\");\r\n");
      out.write("            $(\".btnBox-last\").css(\"visibility\", \"visible\");\r\n");
      out.write("            $(\"#image\").attr(\"disabled\", false);\r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("        $(\"#btnModify2\").click(function(){\r\n");
      out.write("            $(\"#btnUpload\").attr(\"readonly\", false);        \r\n");
      out.write("            $(\"#phoneMD\").attr(\"disabled\", false);\r\n");
      out.write("            $(\"#sample4_detailAddress\").attr(\"readonly\", false);\r\n");
      out.write("            $(\"#postbtn\").attr(\"disabled\", false);\r\n");
      out.write("            $(\"#btnUpload\").attr(\"disabled\",false);\r\n");
      out.write("            $(\"#nicknameMD\").attr(\"disabled\", false);\r\n");
      out.write("            $(\"#emailMD\").attr(\"disabled\", false);\r\n");
      out.write("            $(\".btnBox-first2\").css(\"visibility\", \"hidden\");\r\n");
      out.write("            $(\".btnBox-last\").css(\"visibility\", \"visible\");\r\n");
      out.write("            $(\"#image\").attr(\"disabled\", false);\r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("        		/***** 닉네임 영역 *****/\r\n");
      out.write("		//수정버튼 클릭시 중복검사와 취소버튼 나타남\r\n");
      out.write("        $(\"#nicknameMD\").click(function(){\r\n");
      out.write("        	$(\"#nicknameCheck\").attr(\"disabled\", false);\r\n");
      out.write("        	$(\"#user_nickname\").attr(\"readonly\", false);\r\n");
      out.write("        	$(\"#nicknameCheck\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#nicknameBack\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#nicknameMD\").css(\"display\", \"none\");\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("		// 변수 - 닉네임 관련\r\n");
      out.write("		let nickname = document.getElementById(\"user_nickname\"); // nickname 입력창\r\n");
      out.write("		let nicknameCheck = document.getElementById(\"nicknameCheck\"); // nickname 중복검사 버튼\r\n");
      out.write("\r\n");
      out.write("		// 닉네임 정규식(통과하면 true, 아니면 false반환)\r\n");
      out.write("		function regexNickname() {\r\n");
      out.write("			const regexNickname = /[a-zA-Z0-9ㄱ-힣]{2,16}/; // 2~16자리 대소수한\r\n");
      out.write("			return regexNickname.test(nickname.value);\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 닉네임 중복검사(정규식 통과해야 검사하기)\r\n");
      out.write("		nicknameCheck.addEventListener(\"click\", function () {\r\n");
      out.write("			if (regexNickname()) { // 정규식 통과할경우 중복검사 진행\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type: \"post\",\r\n");
      out.write("					url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/nicknameCheckProc.mem\",\r\n");
      out.write("					data: {\r\n");
      out.write("						\"nickname\": nickname.value\r\n");
      out.write("					}\r\n");
      out.write("				}).done(function (data) { // 중복이 아니면 String형 false반환\r\n");
      out.write("					// 안내문구 출력 & 중복이 아니면 readOnly활성화 & 중복 검사 버튼 비활성화\r\n");
      out.write("					if (data == \"false\") {\r\n");
      out.write("						alert(\"사용 가능한 닉네임입니다.\");\r\n");
      out.write("						nickname.readOnly = \"true\";\r\n");
      out.write("						nicknameCheck.disabled = \"disabled\";\r\n");
      out.write("					} else {\r\n");
      out.write("						alert(\"이미 존재하는 닉네임입니다. 다시 입력해주세요.\");\r\n");
      out.write("					}\r\n");
      out.write("				}).fail(function (e) {\r\n");
      out.write("					console.log(e);\r\n");
      out.write("				});\r\n");
      out.write("			} else {\r\n");
      out.write("				txtRegex_nickname.innerText = \"올바른 닉네임을 입력하세요.\";\r\n");
      out.write("				txtRegex_nickname.style.color = \"red\";\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 닉네임 입력창 벗어날 때 정규식 검사(중복검사 버튼과 겹침)\r\n");
      out.write("		nickname.addEventListener(\"change\", function() {\r\n");
      out.write("		    if(!regexNickname()) {\r\n");
      out.write("				txtRegex_nickname.innerText = \"올바른 닉네임을 입력하세요.\";\r\n");
      out.write("				txtRegex_nickname.style.color = \"red\";\r\n");
      out.write("		    } else {\r\n");
      out.write("				txtRegex_pw.innerText = \"\";\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//취소버튼 클릭시 모든버튼과 값을 원위치\r\n");
      out.write("		$(\"#nicknameBack\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("			document.getElementById(\"user_nickname\").value = document.getElementById(\"sub_nickname\").value\r\n");
      out.write("			$(\"#user_nickname\").attr(\"readonly\", true);\r\n");
      out.write("			$(\"#nicknameCheck\").attr(\"disabled\", true);\r\n");
      out.write("			$(\"#nicknameCheck\").css(\"display\", \"none\");\r\n");
      out.write("        	$(\"#nicknameBack\").css(\"display\", \"none\");\r\n");
      out.write("        	$(\"#nicknameMD\").css(\"display\", \"block\");\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		/***** 이메일 영역 *****/\r\n");
      out.write("		\r\n");
      out.write("		//수정버튼 클릭시 중복검사와 취소버튼 나타남\r\n");
      out.write("		 $(\"#emailMD\").click(function(){\r\n");
      out.write("        	$(\"#emailCheck\").attr(\"disabled\", false);\r\n");
      out.write("        	$(\"#verification_submit2\").attr(\"disabled\", false);\r\n");
      out.write("        	$(\"#user_email\").attr(\"readonly\", false);\r\n");
      out.write("        	$(\"#emailCheck\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#emailBack\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#emailMD\").css(\"display\", \"none\");\r\n");
      out.write("        });\r\n");
      out.write("		\r\n");
      out.write("		// 변수 - 이메일 관련\r\n");
      out.write("		let email = document.getElementById(\"user_email\"); // 이메일 입력창\r\n");
      out.write("        let emailCheck = document.getElementById(\"emailCheck\") // 중복 검사 버튼\r\n");
      out.write("		let verification_input2 = document.getElementById(\"verification_input2\"); // 인증번호 입력창\r\n");
      out.write("		let verification_submit2 = document.getElementById(\"verification_submit2\"); // 인증번호 확인버튼\r\n");
      out.write("		let verification_number2 = 0; // 인증번호 4자리 수 담을 공간\r\n");
      out.write("\r\n");
      out.write("		// 이메일 정규식(정규식 문구 올바른지 검증 필요)\r\n");
      out.write("		function regexEmail() {\r\n");
      out.write("			const regexEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\r\n");
      out.write("			return regexEmail.test(email.value);\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 이메일 입력창 벗어날 때 정규식 검사\r\n");
      out.write("		email.addEventListener(\"change\", function () {\r\n");
      out.write("			if (!regexEmail()) {\r\n");
      out.write("				txtRegex_email.innerText = \"이메일을 제대로 입력하세요.\";\r\n");
      out.write("				txtRegex_email.style.color = \"red\";\r\n");
      out.write("			} else {\r\n");
      out.write("				txtRegex_email.innerText = \"\";\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("        // 이메일 중복검사 \r\n");
      out.write("        emailCheck.addEventListener(\"click\", function() {\r\n");
      out.write("            if(regexEmail()) { // 정규식 통과해야 중복 검사\r\n");
      out.write("                $.ajax({\r\n");
      out.write("					type: \"post\",\r\n");
      out.write("					url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/emailCheckProc.mem\",\r\n");
      out.write("					data: {\r\n");
      out.write("						\"email\": email.value\r\n");
      out.write("					}\r\n");
      out.write("				}).done(function (data) { // 중복이 아니면 String형 false반환\r\n");
      out.write("					if (data == \"false\") {\r\n");
      out.write("						alert(\"사용 가능한 이메일입니다. 인증번호를 보냈습니다.\"); // 안내문구 출력\r\n");
      out.write("						email.readOnly = \"true\"; // 이메일 입력창 잠그기\r\n");
      out.write("						emailCheck.disabled = \"disabled\"; // 이메일 중복검사 버튼 비활성화\r\n");
      out.write("						document.getElementById(\"hiddenInput2\").style.display = \"flex\"; // 인증번호 입력창 띄우기\r\n");
      out.write("						sendEmail(); // 중복검사 통과함과 동시에 인증메일 발송하기\r\n");
      out.write("					} else {\r\n");
      out.write("						alert(\"이미 존재하는 이메일입니다. 다시 입력해주세요.\");\r\n");
      out.write("					}\r\n");
      out.write("				}).fail(function (e) {\r\n");
      out.write("					console.log(e);\r\n");
      out.write("				});\r\n");
      out.write("            } else {\r\n");
      out.write("				txtRegex_email.innerText = \"이메일을 제대로 입력하세요.\";\r\n");
      out.write("				txtRegex_email.style.color = \"red\";\r\n");
      out.write("			}\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("		// 인증메일 발송 \r\n");
      out.write("		function sendEmail() {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"post\",\r\n");
      out.write("				url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sendEmailProc.mem\",\r\n");
      out.write("				data: {\r\n");
      out.write("					\"email\": email.value\r\n");
      out.write("				}\r\n");
      out.write("			}).done(function (data) {\r\n");
      out.write("				// console.log(\"email 인증번호 4자리 : \" + data);\r\n");
      out.write("				verification_number2 = data;\r\n");
      out.write("			}).fail(function (e) {\r\n");
      out.write("				console.log(e);\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 4자리 인증번호 입력 후 확인 버튼 클릭시\r\n");
      out.write("		verification_submit2.addEventListener(\"click\", function () {\r\n");
      out.write("			// 인증번호 입력 입력창과 실제 인증번호 같으면\r\n");
      out.write("			if (verification_input2.value == verification_number2) {\r\n");
      out.write("				alert(\"인증번호 일치\");\r\n");
      out.write("				verification_input2.readOnly = \"true\"; // 이메일 입력창 잠금\r\n");
      out.write("				document.getElementById(\"hiddenInput2\").style.display = \"none\"; // 인증번호 입력창 숨기기\r\n");
      out.write("			} else {\r\n");
      out.write("				alert(\"인증번호 불일치\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//취소버튼 클릭시 모든버튼과 값을 원위치\r\n");
      out.write("		$(\"#emailBack\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("			document.getElementById(\"user_email\").value = document.getElementById(\"sub_email\").value\r\n");
      out.write("			$(\"#user_email\").attr(\"readonly\", true);\r\n");
      out.write("			$(\"#emailCheck\").attr(\"disabled\", true);\r\n");
      out.write("			$(\"#verification_submit2\").attr(\"disabled\", true);\r\n");
      out.write("			$(\"#emailCheck\").css(\"display\", \"none\");\r\n");
      out.write("        	$(\"#emailBack\").css(\"display\", \"none\");\r\n");
      out.write("        	$(\"#emailMD\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#hiddenInput\").css(\"display\",\"none\");\r\n");
      out.write("		})\r\n");
      out.write("		/***** 휴대전화 영역 *****/\r\n");
      out.write("\r\n");
      out.write("		//수정버튼 클릭시 중복검사와 취소버튼 나타남\r\n");
      out.write("		$(\"#phoneMD\").click(function(){\r\n");
      out.write("        	$(\"#phone_verification\").attr(\"disabled\", false);\r\n");
      out.write("        	$(\"#phone_first\").attr(\"disabled\", false);\r\n");
      out.write("        	$(\"#verification_submit\").attr(\"disabled\", false);\r\n");
      out.write("        	$(\"#phone_second\").attr(\"readonly\", false);\r\n");
      out.write("            $(\"#phone_third\").attr(\"readonly\", false);\r\n");
      out.write("        	$(\"#phone_verification\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#phoneBack\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#phoneMD\").css(\"display\", \"none\");\r\n");
      out.write("        });\r\n");
      out.write("		\r\n");
      out.write("		// 변수 -  휴대전화 관련\r\n");
      out.write("		let phone1 = document.getElementById(\"phone_first\") // 번호 첫번째 영역\r\n");
      out.write("		let phone2 = document.getElementById(\"phone_second\"); // 번호 중간 영역\r\n");
      out.write("		let phone3 = document.getElementById(\"phone_third\"); // 번호 뒷자리 영역\r\n");
      out.write("		let phone_verification = document.getElementById(\"phone_verification\"); // 인증번호 발송 버튼\r\n");
      out.write("		let verification_input = document.getElementById(\"verification_input\"); // 인증번호 입력창(숨어있음)\r\n");
      out.write("        let verification_submit = document.getElementById(\"verification_submit\"); // 인증번호 확인 버튼\r\n");
      out.write("		let phoneNumber = 0; // 휴대번호 11자리 담을 공간\r\n");
      out.write("		let verification_number = 0; // 4자리 인증번호 담을 공간\r\n");
      out.write("\r\n");
      out.write("		// 휴대전화 정규식(통과하면 true, 아니면 false 반환)\r\n");
      out.write("		function regexPhone() {\r\n");
      out.write("			const regexPhone2 = /[0-9]{4,4}/;\r\n");
      out.write("			const regexPhone3 = /[0-9]{4,4}/;\r\n");
      out.write("			// 휴대전화 번호 중간 영역, 마지막 영역 모두 정규식 통과했을 경우\r\n");
      out.write("			if (regexPhone2.test(phone2.value) && regexPhone3.test(phone3.value)) {\r\n");
      out.write("				return true;\r\n");
      out.write("			} else {\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 휴대전화 인증 버튼 클릭시\r\n");
      out.write("		phone_verification.addEventListener(\"click\", function () {\r\n");
      out.write("			if (regexPhone()) { // 정규식 통과해야 인증절차 진행\r\n");
      out.write("				// 번호 수정 차단 & 숨은 인증창 띄우기 & 인증번호 발송 알림창 띄우기\r\n");
      out.write("				phone1.disabled = \"false\";\r\n");
      out.write("				phone2.readOnly = \"true\";\r\n");
      out.write("				phone3.readOnly = \"true\";\r\n");
      out.write("				document.getElementById(\"hiddenInput\").style.display = \"flex\";\r\n");
      out.write("				alert(\"인증번호가 발송되었습니다.\");\r\n");
      out.write("				// 휴대전화 번호 서버로 넘겨서 문자발송 처리하기\r\n");
      out.write("				phoneNumber = phone1.value + phone2.value + phone3.value;\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type: \"post\",\r\n");
      out.write("					url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sendSmsProc.mem\",\r\n");
      out.write("					data: {\r\n");
      out.write("						\"phoneNumber\": phoneNumber\r\n");
      out.write("					}\r\n");
      out.write("				}).done(function (data) {\r\n");
      out.write("					// 서버에서 생성된 무작위 4자리 인증번호를 변수에 저장\r\n");
      out.write("					verification_number = data;\r\n");
      out.write("                    phone_verification.disabled = \"disabled\";\r\n");
      out.write("				}).fail(function (e) {\r\n");
      out.write("					console.log(e);\r\n");
      out.write("				});\r\n");
      out.write("			} else { // 정규식 미통과 경우\r\n");
      out.write("				alert(\"번호를 정확히 입력해주세요.\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		// 4자리 인증번호 입력 후 확인버튼 클릭시\r\n");
      out.write("		verification_submit.addEventListener(\"click\", function () {\r\n");
      out.write("			// console.log(\"verification_input.value : \" + verification_input.value);\r\n");
      out.write("			// console.log(\"verification_number : \" + verification_number);\r\n");
      out.write("\r\n");
      out.write("			// 입력한 번호와, 서버에서 생성한 번호가 일치할 때\r\n");
      out.write("			if (verification_number == verification_input.value) {\r\n");
      out.write("				alert(\"인증번호 일치\"); // 알림창 띄우기\r\n");
      out.write("				verification_input.readOnly = \"true\"; // 인증번호 입력창 잠그기\r\n");
      out.write("				verification_submit.disabled = \"disabled\"; // 인증 발송 버튼 잠그기\r\n");
      out.write("			} else { // 일치하지 않는 경우\r\n");
      out.write("				alert(\"인증번호 불일치\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		//취소버튼 클릭시 모든버튼과 값을 원위치\r\n");
      out.write("		$(\"#phoneBack\").click(function(){\r\n");
      out.write("			\r\n");
      out.write("			document.getElementById(\"phone_first\").value = document.getElementById(\"sub_phone_first\").value;\r\n");
      out.write("			document.getElementById(\"phone_second\").value = document.getElementById(\"sub_phone_second\").value\r\n");
      out.write("			document.getElementById(\"phone_third\").value = document.getElementById(\"sub_phone_third\").value\r\n");
      out.write("			$(\"#phone_first\").attr(\"disabled\", true);\r\n");
      out.write("			$(\"#phone_second\").attr(\"readonly\", true);\r\n");
      out.write("            $(\"#phone_third\").attr(\"readonly\", true);\r\n");
      out.write("			$(\"#phone_verification\").attr(\"disabled\", true);\r\n");
      out.write("			$(\"#phone_verification\").css(\"display\", \"none\");\r\n");
      out.write("			$(\"#verification_submit\").attr(\"disabled\", true);\r\n");
      out.write("        	$(\"#phoneBack\").css(\"display\", \"none\");\r\n");
      out.write("        	$(\"#phoneMD\").css(\"display\", \"block\");\r\n");
      out.write("        	$(\"#hiddenInput\").css(\"display\",\"none\");\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("        //뒤로가기 클릭시 다시 초기화면으로 돌아감\r\n");
      out.write("        $(\"#btnBack\").click(function(){\r\n");
      out.write("            location.reload();\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        //홈으로 클릭시 메인화면으로 \r\n");
      out.write("        $(\"#btnHome\").click(function(){\r\n");
      out.write("            location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/toMain.mem\";\r\n");
      out.write("        })\r\n");
      out.write("        //회원탈퇴 클릭시 alert창으로 동의 받고 회원탈퇴\r\n");
      out.write("        $(\"#btnDelete\").click(function(){\r\n");
      out.write("        	let YN = confirm(\"정말 탈퇴하시겠습니까?\");\r\n");
      out.write("        	if(YN==true){\r\n");
      out.write("        		location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/deleteProc.mem\"\r\n");
      out.write("        	}\r\n");
      out.write("        })\r\n");
      out.write("        //수정버튼 클릭시 비밀번호확인팝업->비밀번호 변경창으로\r\n");
      out.write("        $(\"#btnPwModify\").click(function(){\r\n");
      out.write("        	 let uri = \"/toPwPopup.mem\";\r\n");
      out.write("        	 let name = \"비밀번호 확인\";\r\n");
      out.write("        	 let option = \"left=600, width=600, height=400, top=100\";\r\n");
      out.write("        	 \r\n");
      out.write("        	 window.open(uri,name,option);\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $(\"#image\").on(\"change\", function (e) {\r\n");
      out.write("			$(\"#profilePhoto\").css(\"display\",\"none\");\r\n");
      out.write("		});\r\n");
      out.write("      //사진 미리보기 기능 \r\n");
      out.write("        function setThumbnail(event) { \r\n");
      out.write("            var reader = new FileReader(); \r\n");
      out.write("            \r\n");
      out.write("            reader.onload = function(event) {\r\n");
      out.write("                var img = document.createElement(\"img\"); \r\n");
      out.write("                img.setAttribute(\"src\", event.target.result); \r\n");
      out.write("                document.querySelector(\"div#image_container\").appendChild(img);\r\n");
      out.write("                }; \r\n");
      out.write("                reader.readAsDataURL(event.target.files[0]);\r\n");
      out.write("                };\r\n");
      out.write("                \r\n");
      out.write("          //개인정보페이지에 사진띄우기        \r\n");
      out.write("         const kakaoLog = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginSession.get('access_token')}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("         const photoPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getProfilePhoto_path()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";   \r\n");
      out.write("              if(kakaoLog != \"\"){\r\n");
      out.write("                 	//일반로그인일경우 사진경로 다르게 변경\r\n");
      out.write("                 	$(\"#image_container\").css({	\r\n");
      out.write("                  		\"background-image\": \"url('\" + photoPath + \"')\"		\r\n");
      out.write("                   	});\r\n");
      out.write("                   }\r\n");
      out.write("              \r\n");
      out.write("              // test\r\n");
      out.write("              console.log(photoPath);\r\n");
      out.write("                   \r\n");
      out.write("           // 이미지 미리보기 할때 사진 변환\r\n");
      out.write("              function readInputFile(e){\r\n");
      out.write("                  let sel_files = [];\r\n");
      out.write("                  \r\n");
      out.write("                  sel_files = [];\r\n");
      out.write("                  $('#image_container').empty();\r\n");
      out.write("                  \r\n");
      out.write("                  let files = e.target.files;\r\n");
      out.write("                  let fileArr = Array.prototype.slice.call(files);\r\n");
      out.write("                  let index = 0;\r\n");
      out.write("                  \r\n");
      out.write("                  fileArr.forEach(function(f){\r\n");
      out.write("                	  if(!f.type.match(\"image/*\")){\r\n");
      out.write("                          alert(\"이미지 확장자만 업로드 가능합니다.\");\r\n");
      out.write("                           return;\r\n");
      out.write("                       };\r\n");
      out.write("\r\n");
      out.write("                      if(files.length > 2){\r\n");
      out.write("                         sel_files.push(f);\r\n");
      out.write("                         console.log(f.type);\r\n");
      out.write("                          let reader = new FileReader();\r\n");
      out.write("                          reader.onload = function(e){\r\n");
      out.write("                             let html = `<a id=img_id_");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("><img src=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${e.target.result}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" data-file=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${f.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" /></a>`;\r\n");
      out.write("                              $(\"#preiew\").append(html);\r\n");
      out.write("                              index++;\r\n");
      out.write("                              alert(\"사진은 1장만 등록 할 수 있습니다.\");\r\n");
      out.write("                          };\r\n");
      out.write("                          reader.readAsDataURL(f);\r\n");
      out.write("                      }\r\n");
      out.write("                  })\r\n");
      out.write("              }\r\n");
      out.write("              $('#image').on('change',readInputFile);  \r\n");
      out.write("       \r\n");
      out.write("		\r\n");
      out.write("		// 완료 버튼 - 공백없고, 정규식 검사 모두 다시 돌려서 통과하면 submit처리(프로필 사진, 상세주소는 필수 아님)\r\n");
      out.write("		$(\"#btnGo\").click(function(){\r\n");
      out.write("			// 변수 - 주소 관련\r\n");
      out.write("			let postcode = document.getElementById(\"sample4_postcode\"); // 우편번호\r\n");
      out.write("			let roadAddr = document.getElementById(\"sample4_roadAddress\"); // 도로명주소\r\n");
      out.write("			let detailAddr = document.getElementById(\"sample4_detailAddress\"); // 상세주소\r\n");
      out.write("			let extraAddr = document.getElementById(\"sample4_extraAddress\"); // 참고항목\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			 if(!nicknameCheck.disabled) {\r\n");
      out.write("				alert(\"닉네임 중복검사를 해주세요.\");\r\n");
      out.write("                return;\r\n");
      out.write("             \r\n");
      out.write("			 }else if(!emailCheck.disabled || !verification_submit2.disabled){\r\n");
      out.write("				 alert(\"이메일 인증 및 중복검사를 해주세요.\");\r\n");
      out.write("	             return;\r\n");
      out.write("			//else if(!$(\"#agreement\").is(\":checked\")) {\r\n");
      out.write("              //  alert(\"개인정보 수집 및 이용 동의를 해주세요.\");\r\n");
      out.write("                //return;\r\n");
      out.write("			 }else if(!phone_verification.disabled || !verification_submit.disabled){\r\n");
      out.write("				 alert(\"핸드폰 인증 및 중복검사를 해주세요.\");\r\n");
      out.write("	             return;\r\n");
      out.write("			 \r\n");
      out.write("            }else { // 모든 검사를 통과하면, 휴대전화/주소 값 합쳐서 양식 제출\r\n");
      out.write("				document.getElementById(\"user_phone\").value = phone1.value + phone2.value + phone3.value;\r\n");
      out.write("            	if(postcode.value==\"\" || roadAddr==\"\"){\r\n");
      out.write("            		document.getElementById(\"user_address\").value = document.getElementById(\"sub_user_address\").value;\r\n");
      out.write("            	}else{\r\n");
      out.write("            		document.getElementById(\"user_address\").value = postcode.value + \" \" + roadAddr.value + \" \" + detailAddr.value + extraAddr.value;\r\n");
      out.write("            		}\r\n");
      out.write("            \r\n");
      out.write("				document.getElementById(\"modifyForm\").submit();\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                	");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /member/userInfo.jsp(287,17) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty loginSession.get('access_token') }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                		<div class=\"row btnBox-first\">\r\n");
          out.write("		                    <div class=\"col-3\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-success\" id=\"btnModify\">개인정보수정</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                    <div class=\"col-3\" id=\"btnPwModifyBox\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-info\" id=\"btnPwModify\">비밀번호변경</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                    <div class=\"col-3\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-danger\" id=\"btnDelete\">회원탈퇴</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                    <div class=\"col-3\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-dark\" id=\"btnHome\">홈으로</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                </div>\r\n");
          out.write("                	");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                		<div class=\"row btnBox-first2\">\r\n");
          out.write("		                    <div class=\"col-3\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-success\" id=\"btnModify2\">개인정보수정</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                    <div class=\"col-3\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-danger\" id=\"btnDelete\">회원탈퇴</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                    <div class=\"col-3\">\r\n");
          out.write("		                        <button type=\"button\" class=\"btn btn-outline-dark\" id=\"btnHome\">홈으로</button>\r\n");
          out.write("		                    </div>\r\n");
          out.write("		                </div>\r\n");
          out.write("                	");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
